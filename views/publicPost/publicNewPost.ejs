<!DOCTYPE html>
<html lang="en">

<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <!-- style.css  -->
   <link rel="stylesheet" href="/style.css">
   <!-- axios CDN -->
   <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
   <!-- jquery CDN -->
   <script src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
   <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"
      integrity="sha256-lSjKY0/srUM9BE3dPm+c4fBo1dky2v27Gdjm2uoZaL0=" crossorigin="anonymous"></script>
   <title>하이스쿨 - 자유게시판 게시글 작성</title>
   <style>
      .textField {
         width: 100%;
         height: 300px;
      }

      .textField-title {
         height: 100%;
      }

      #motivation,
      #introduction {
         height: 11rem;
      }


      .textNum {
         display: flex;
         justify-content: space-between;

      }
   </style>
</head>

<body>
   <%- include('../component/header')%>
      <main class="container">
         <div>
            <!-- 글쓰기 폼 -->
            <form id="post-form" name="add-post">
               <h2>게시글 작성</h2>
               <label for="post-title">제목
                  <input type="text" id="post-title" class="textField textField-title" name="title"
                     placeholder="제목을 입력하세요" />
                  <div class="textNum">
                     <div class="helpText">최대 30글자까지 입력가능합니다</div>
                     <div class="helpText">
                        <span class="motivationCount">0</span>/30
                     </div>
                  </div>
               </label>


               <label for="post-content">내용
                  <textarea id="post-content" class="textField" name="content" placeholder="내용을 입력하세요"></textarea>
                  <div class="textNum">
                     <div class="helpText">최대 500글자까지 입력가능합니다</div>
                     <div class="helpText">
                        <span class="introductionCount">0</span>/500
                     </div>
                  </div>
               </label>


               <input type="file" name="filesInput" id="filesInput" accept="image/*" onchange="uploadToClient()"
                  multiple />
               <div id="preview"></div>

               <button type="button" onclick="handleSignedUrl()">업로드</button>

               <button type="button" class="btn btn-primary" onclick="addpost()">
                  등록하기
               </button>
            </form>
         </div>
      </main>

      <%- include('../component/upbtn')%>

         <script>
            const form = document.forms["add-post"];

            function readURL(input) { }

            function readFiles() {
               var files = document.getElementById("filesInput").files;

               for (var i = 0; i < files.length; i++) {
                  alert(files[i].name);
               }
            }

            let createObjectURL = null;
            let images = null;
            let imagesArr = [];
            let payload = [];
            const uploadFiles = document.querySelector("#filesInput");
            let uploadedFileUrl = "";
            let uploadedUrl = [];
            let uploadImages = [];

            function uploadToClient(e) {
               if (createObjectURL) {
                  URL.revokeObjectUrl(createObjectURL);
               }

               console.log("282 : uploadedFiles", uploadFiles);
               if (uploadFiles.files && uploadFiles.files[0]) {
                  console.log('if문 안으로');
                  console.log(uploadFiles.files.length);
                  for (i = 0; i < uploadFiles.files.length; i++) {
                     console.log(i);
                     const img = uploadFiles.files[i];
                     imagesArr.push(uploadFiles.files[i]);
                     images = img;
                     console.log("286 images", images);
                     createObjectURL = URL.createObjectURL(img);
                  }
               }

               console.log('images', images);
               console.log('imagesArr', imagesArr);
               console.log('imagesArr type', imagesArr[0].type);



               for (i = 0; i < imagesArr.length; i++) {
                  payload.push({
                     name: Math.random().toString(36).substring(2, 32),
                     type: imagesArr[i].type
                  });
               }


            }


            async function handleSignedUrl() {
               const uploadedFileOriginUrl = await uploadImgClient();
               console.log(uploadedFileOriginUrl);
            }



            async function uploadImgClient() {
               console.log("uploadImgClient 실행");
               try {
                  const result = await axios({
                     method: "POST",
                     url: "/s3MultipleSignedUrl",
                     data: payload
                  });

                  const axiosResult = result;
                  console.log("axiosResult : ", axiosResult);
                  const signedUrl = axiosResult.data;
                  console.log("signedURL", signedUrl);



                  for (i = 0; i < signedUrl.length; i++) {
                     const uploadRes = await axios({
                        method: "PUT",
                        url: signedUrl[i],
                        data: imagesArr[i],
                     });
                     console.log("uploadRes : ", uploadRes.config.url);
                     uploadedUrl.push(uploadRes.config.url);
                     console.log('uploadedUrl', uploadedUrl);
                  }

                  return uploadedUrl;
               } catch (err) {
                  console.log(err);
               }
            }

            // 유효성 검사 (글자수 세기, 글자수 넘어가면 경고 문구 보여주고 더이상 타이핑 되지 않도록 하기)
            $('#post-title').keyup(function (e) {
               let content1 = $(this).val();

               // 글자수 세기
               if (content1.length == 0 || content1 == '') {
                  $('.motivationCount').text('0');
               } else {
                  $('.motivationCount').text(content1.length);
               }



               // 글자수 제한
               if (content1.length > 29) {

                  $(this).val($(this).val().substring(0, 29));

               };
            });

            $('#post-content').keyup(function (e) {
               let content2 = $(this).val();

               // 글자수 세기
               if (content2.length == 0 || content2 == '') {
                  $('.introductionCount').text('0');
               } else {
                  $('.introductionCount').text(content2.length);
               }
               if (content2.length > 500) {

                  $(this).val($(this).val().substring(0, 500));

               };
            });


            async function addpost() {
               var title = document.getElementById('post-title').value;
               var content = document.getElementById('post-content').value;
               var files = document.getElementById('filesInput').files;




               // 제목 유효성 검사: 한글일 경우 30자, 영어일 경우 100자
               if ((/[가-힣]/.test(title) && title.length > 30) || (!/[가-힣]/.test(title) && title.length > 100)) {
                  alert('제목은 한글로는 30자 이하, 영어로는 100자 이하로 입력해주세요.');
                  return false;
               }

               // 내용 유효성 검사: 한글 500자 이하
               if (content.length > 500) {
                  alert('내용은 500자 이하로 입력해주세요.');
                  return false;
               }

               // 파일 유효성 검사: 5장 이하
               if (files.length > 5) {
                  alert('사진은 최대 5장까지 업로드 가능합니다.');
                  return false;
               }

               // 여기에 폼 제출 코드를 추가
               // 예: document.getElementById('post-form').submit();


               const uploadedFileOriginUrl = await uploadImgClient();
               if (uploadedFileOriginUrl !== null) {
                  console.log("presignedURL 있어요");
                  console.log('uploadedFileOriginUrl', uploadedFileOriginUrl);

                  for (i = 0; i < uploadedFileOriginUrl.length; i++) {
                     const parts = uploadedFileOriginUrl[i].split("/");
                     uploadImages.push(parts[parts.length - 1].split("?")[0]);
                  }

                  console.log('uploadedImages', uploadImages);

               } else {
                  console.log("presignedURL 없어요");
                  uploadImages = "";
               }

               console.log("uploadImages", uploadImages);


               await axios({
                  method: "POST",
                  url: `/publicNewPost`,
                  data: {
                     // 클라이언트에서 서버로 전달할 club_id
                     // userid_num: "2", // 임시 데이터
                     title: form.title.value,
                     content: form.content.value,
                     image: uploadImages,
                  },
               }).then((res) => {
                  console.log(res.data);
                  if (res.status === 200) {
                     const post_id = res.data.post_id; // 응답으로부터 post_id를 얻음
                     alert("게시물 등록완료");
                     // 새 게시물 엘리먼트 생성
                     const newPostElement = document.createElement("div");
                     newPostElement.innerHTML = `
                  <h3>${form.title.value}</h3>
                  <p>${form.content.value}</p>
               `;
                     window.location.href = `/publicPostDetail/${post_id}`;
                  }
               });
            }
         </script>
</body>

</html>