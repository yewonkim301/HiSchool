<!DOCTYPE html>
<html lang="ko">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>마이페이지</title>
  <link rel="stylesheet" href="/style.css" />
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <style></style>
</head>

<body>
  <%- include('../component/header')%>
    <main>
      <div class="container">
        <div class="profile-header" onclick="changeProfileImg()">
          <% if (signedFile) { %>
            <img src="<%= signedFile %>" alt="프로필 이미지" width="50" />
            <% } else { %>
              <img src="https://cdn-icons-png.flaticon.com/512/3177/3177440.png" alt="프로필 이미지" width="50" />
              <% } %>
        </div>

        <div class="input">
          <label for="fileUpload">프로필 이미지</label>
          <input name="myImage" type="file" id="fileUpload" accept="image/*" onchange="readURL(this); uploadToClient();"
            class="file-upload-input" />
          <!-- <button class="file-upload-button">이미지 선택</button> -->
          <span class="file-upload-text">파일을 선택하세요</span>
          <img id="preview" src="" alt="" />
        </div>

        <form name="profile">
          <div class="input">
            <label for="name">이름</label>
            <input type="text" class="textField" id="name" value="<%= data.name%>" />
          </div>
          <div class="input">
            <label for="phone">전화번호</label>
            <input type="text" class="textField" id="phone" value="<%= data.phone %>" />
          </div>
          <div class="input">
            <label for="birthday">생일</label>
            <input type="text" class="textField" id="birthday" value="<%= data.birthday %>" />
          </div>
          <div class="input">
            <label for="school">학교</label>
            <input type="text" class="textField" id="school" value="<%= data.school %>" />
          </div>
          <div class="input">
            <label for="grade">학년</label>
            <input type="text" class="textField" id="grade" value="<%= data.grade %>" />
          </div>
          <div class="input">
            <label for="classid">반</label>
            <input type="text" class="textField" id="classid" value="<%= data.classid %>" />
          </div>

          <% if (Leader || Leader2 || Leader3) { %>
            <label for="deleteButton">가입된 동아리가 존재합니다. <br />동아리 탈퇴 후 회원탈퇴를
              해주세요.</label>
            <button class="btn-sm btn-warning" id="deleteButton" style="background-color: rgba(255, 0, 0, 0.188)"
              onclick="handleDelete()" disabled>
              탈퇴
            </button>
            <% } else { %>
              <button class="btn-sm btn-warning" style="background-color: red" onclick="handleDelete()">
                탈퇴
              </button>
              <% } %>

        </form>
        <div class="cta">
          

                <button class="btn btn-primary" onclick="handleUpdate()">
                  수정하기
                </button>
        </div>
      </div>
    </main>
    <script>
      const form = document.forms["profile"];

      async function handleDelete() {
        confirm("정말 탈퇴하실까요?");

        const result = await axios({
          method: "DELETE",
          url: "/mypageMain",
        });

        if (result.data.isDeleted) {
          alert("회원 탈퇴 완료");
          handleLogout();
          document.location.href = "/";
        } else {
          alert("회원 탈퇴 실패");
        }
      }

      async function handleLogout() {
        const result = await axios({
          method: "GET",
          url: "/logout",
        });
        console.log(result);
        document.location.href = "/";
      }
    </script>

    <!--# 프로필 미리보기 -->
    <script>
      function readURL(input) {
        if (input.files && input.files[0]) {
          var reader = new FileReader();
          reader.onload = function (e) {
            document.getElementById("preview").src = e.target.result;
          };
          reader.readAsDataURL(input.files[0]);
        } else {
          document.getElementById("preview").src = "";
        }
      }
    </script>

    <!--# 프로필 이미지 업로드 -->
    <script>
      let createObjectURL = null;
      let image = null;
      const uploadFiles = document.querySelector("#fileUpload");
      let uploadedFileUrl = "";

      function uploadToClient(e) {
        if (createObjectURL) {
          URL.revokeObjectUrl(createObjectURL);
        }

        console.log("282 : uploadedFiles", uploadFiles);
        if (uploadFiles.files && uploadFiles.files[0]) {
          const i = uploadFiles.files[0];
          image = i;
          console.log("286 image", image);
          createObjectURL = URL.createObjectURL(i);
        }
      }

      async function uploadImgClient() {
        console.log("uploadImgClient 실행");
        try {
          const result = await axios({
            method: "POST",
            url: "/s3upload",
            data: {
              name:
                // "client/" +
                Math.random().toString(36).substring(2, 32),
              type: image.type,
            },
          });

          const axiosResult = result;
          console.log("axiosResult : ", axiosResult);
          const signedUrl = axiosResult.data;
          console.log("signedURL", signedUrl);

          const uploadRes = await axios({
            method: "PUT",
            url: signedUrl,
            data: image,
            headers: {
              "Content-Type": image.type,
            },
          });
          console.log("uploadRes : ", uploadRes.config.url);
          uploadedFileUrl = uploadRes.config.url;

          // console.log('first uploadedfileurl', uploadedFileUrl)
          return uploadedFileUrl;
        } catch (err) {
          console.log(err);
        }
      }

      async function handleUpdate() {
        const uploadedFileOriginUrl = await uploadImgClient();
        console.log("따끈따끈한 업로드된 파일 경로", uploadedFileOriginUrl);

        const name = form.name.value;
        const school = form.school.value;
        const grade = form.grade.value;
        const classid = form.classid.value;
        const birthday = form.birthday.value;
        const phone = form.phone.value;
        let profile_img;

        if (uploadedFileOriginUrl) {
          console.log("presignedURL 있어요");
          const parts = uploadedFileOriginUrl.split("/");
          profile_img = parts[parts.length - 1].split("?")[0];
        } else {
          console.log("presignedURL 없어요");
          profile_img = "";
        }

        console.log("profile_img", profile_img);

        try {
          const result = await axios({
            method: "PATCH",
            url: "/mypageMain",
            headers: {
              // "Content-Type": "application/formData",
            },
            data: {
              name: form.name.value,
              school: form.school.value,
              grade: form.grade.value,
              classid: form.classid.value,
              birthday: form.birthday.value,
              phone: form.phone.value,
              // password: form.password.value,
              profile_img,
            },
          });
          console.log(result);
          if (result.data.isUpdated === true) {
            alert(result.data.msg);
            document.location.href = "/mypageMain";
          }
        } catch (err) {
          console.log(err);
        }
      }
    </script>
</body>

</html>